{"version":3,"file":"polpware-ngx-oauth2.js","sources":["ng://@polpware/ngx-oauth2/lib/models/user.model.ts","ng://@polpware/ngx-oauth2/lib/models/login-response.model.ts","ng://@polpware/ngx-oauth2/lib/models/permission.model.ts","ng://@polpware/ngx-oauth2/lib/services/oidc-helper.service.ts","ng://@polpware/ngx-oauth2/lib/services/jwt-helper.ts","ng://@polpware/ngx-oauth2/lib/services/auth.service.ts","ng://@polpware/ngx-oauth2/lib/services/auth-guard.service.ts","ng://@polpware/ngx-oauth2/lib/ngx-oauth2.module.ts"],"sourcesContent":["// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class User {\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\n    constructor(id?: string, userName?: string, fullName?: string, email?: string, jobTitle?: string, phoneNumber?: string, roles?: string[]) {\n\n        this.id = id;\n        this.userName = userName;\n        this.fullName = fullName;\n        this.email = email;\n        this.jobTitle = jobTitle;\n        this.phoneNumber = phoneNumber;\n        this.roles = roles;\n    }\n\n\n    get friendlyName(): string {\n        let name = this.fullName || this.userName;\n\n        if (this.jobTitle) {\n            name = this.jobTitle + ' ' + name;\n        }\n\n        return name;\n    }\n\n\n    public id: string;\n    public userName: string;\n    public fullName: string;\n    public email: string;\n    public jobTitle: string;\n    public phoneNumber: string;\n    public isEnabled: boolean;\n    public isLockedOut: boolean;\n    public roles: string[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { PermissionValues } from './permission.model';\n\n\nexport interface LoginResponse {\n    access_token: string;\n    refresh_token: string;\n    expires_in: number;\n    token_type: string;\n}\n\n\nexport interface AccessToken {\n    nbf: number;\n    exp: number;\n    iss: string;\n    aud: string | string[];\n    client_id: string;\n    sub: string;\n    auth_time: number;\n    idp: string;\n    role: string | string[];\n    permission: PermissionValues | PermissionValues[];\n    name: string;\n    email: string;\n    phone_number: string;\n    fullname: string;\n    jobtitle: string;\n    configuration: string;\n    scope: string | string[];\n    amr: string[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport type PermissionNames =\n    'View Users' | 'Manage Users' |\n    'View Roles' | 'Manage Roles' | 'Assign Roles';\n\nexport type PermissionValues =\n    'users.view' | 'users.manage' |\n    'roles.view' | 'roles.manage' | 'roles.assign';\n\nexport class Permission {\n\n    public static readonly viewUsersPermission: PermissionValues = 'users.view';\n    public static readonly manageUsersPermission: PermissionValues = 'users.manage';\n\n    public static readonly viewRolesPermission: PermissionValues = 'roles.view';\n    public static readonly manageRolesPermission: PermissionValues = 'roles.manage';\n    public static readonly assignRolesPermission: PermissionValues = 'roles.assign';\n\n\n    constructor(name?: PermissionNames, value?: PermissionValues, groupName?: string, description?: string) {\n        this.name = name;\n        this.value = value;\n        this.groupName = groupName;\n        this.description = description;\n    }\n\n    public name: PermissionNames;\n    public value: PermissionValues;\n    public groupName: string;\n    public description: string;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\nimport {\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider,\n    IConfigurationServiceContract,\n    ConfigurationServiceAbstractProvider,\n    environment,\n    DBkeys\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { LoginResponse } from '../models/login-response.model';\n\n\n@Injectable()\nexport class OidcHelperService {\n\n    private get baseUrl() { return this.configurations.baseUrl; }\n    private clientId = 'quickapp_spa';\n    private scope = 'openid email phone profile offline_access roles quickapp_api';\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private http: HttpClient,\n        private oauthService: OAuthService,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        /*\n        if (environment.requireHttps !== undefined) {\n            this.oauthService.configure({\n                requireHttps: false\n            });\n        } */\n\n    }\n\n\n    loginWithPassword(userName: string, password: string) {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('username', userName)\n            .append('password', password)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'password')\n            .append('scope', this.scope);\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    refreshLogin() {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('refresh_token', this.refreshToken)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'refresh_token');\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    get accessToken(): string {\n        return this.localStorage.getData(DBkeys.ACCESS_TOKEN);\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.localStorage.getDataObject<Date>(DBkeys.TOKEN_EXPIRES_IN, true);\n    }\n\n    get refreshToken(): string {\n        return this.localStorage.getData(DBkeys.REFRESH_TOKEN);\n    }\n\n    get isSessionExpired(): boolean {\n        if (this.accessTokenExpiryDate == null) {\n            return true;\n        }\n\n        return this.accessTokenExpiryDate.valueOf() <= new Date().valueOf();\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\n/**\n * Helper class to decode and find JWT expiration.\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class JwtHelper {\n\n    public urlBase64Decode(str: string): string {\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: { break; }\n            case 2: { output += '=='; break; }\n            case 3: { output += '='; break; }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    }\n\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n    private b64DecodeUnicode(str: any) {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), (c: any) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    public decodeToken(token: string): any {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    public getTokenExpirationDate(token: string): Date {\n        let decoded: any;\n        decoded = this.decodeToken(token);\n\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n\n        const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(decoded.exp);\n\n        return date;\n    }\n\n    public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n\n        if (date == null) {\n            return false;\n        }\n\n        // Token expired?\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider,\n    IConfigurationServiceContract,\n    ConfigurationServiceAbstractProvider,\n    Utilities,\n    DBkeys,\n    ConfigurationServiceConstants\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { OidcHelperService } from './oidc-helper.service';\nimport { JwtHelper } from './jwt-helper';\nimport { AccessToken, LoginResponse } from '../models/login-response.model';\nimport { User } from '../models/user.model';\nimport { PermissionValues } from '../models/permission.model';\n\n@Injectable()\nexport class AuthService {\n    public get loginUrl() { return this.configurations.loginUrl; }\n    public get homeUrl() { return this.configurations.homeUrl; }\n\n    public loginRedirectUrl: string;\n    public logoutRedirectUrl: string;\n\n    public reLoginDelegate: () => void;\n\n    private previousIsLoggedInCheck = false;\n    private _loginStatus = new Subject<boolean>();\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private router: Router,\n        private oidcHelperService: OidcHelperService,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        this.initializeLoginStatus();\n    }\n\n    private initializeLoginStatus() {\n        this.localStorage.getInitEvent().subscribe(() => {\n            this.reevaluateLoginStatus();\n        });\n    }\n\n    gotoPage(page: string, preserveParams = true) {\n\n        const navigationExtras: NavigationExtras = {\n            queryParamsHandling: preserveParams ? 'merge' : '', preserveFragment: preserveParams\n        };\n\n        this.router.navigate([page], navigationExtras);\n    }\n\n    gotoHomePage() {\n        this.router.navigate([this.homeUrl]);\n    }\n\n    redirectLoginUser() {\n\n        const redirect = this.loginRedirectUrl && this.loginRedirectUrl != '/' && this.loginRedirectUrl != ConfigurationServiceConstants.defaultHomeUrl ? this.loginRedirectUrl : this.homeUrl;\n        this.loginRedirectUrl = null;\n\n        const urlParamsAndFragment = Utilities.splitInTwo(redirect, '#');\n        const urlAndParams = Utilities.splitInTwo(urlParamsAndFragment.firstPart, '?');\n\n        const navigationExtras: NavigationExtras = {\n            fragment: urlParamsAndFragment.secondPart,\n            queryParams: Utilities.getQueryParamsFromString(urlAndParams.secondPart),\n            queryParamsHandling: 'merge'\n        };\n\n        this.router.navigate([urlAndParams.firstPart], navigationExtras);\n    }\n\n    redirectLogoutUser() {\n        const redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;\n        this.logoutRedirectUrl = null;\n\n        this.router.navigate([redirect]);\n    }\n\n    redirectForLogin(redirectUrl?: string) {\n        if (redirectUrl) {\n            this.loginRedirectUrl = redirectUrl;\n        } else {\n            this.loginRedirectUrl = this.router.url;\n        }\n        this.router.navigate([this.loginUrl]);\n    }\n\n    reLogin() {\n        if (this.reLoginDelegate) {\n            this.reLoginDelegate();\n        } else {\n            this.redirectForLogin();\n        }\n    }\n\n    refreshLogin() {\n        return this.oidcHelperService.refreshLogin()\n            .pipe(map(resp => this.processLoginResponse(resp, this.rememberMe)));\n    }\n\n    loginWithPassword(userName: string, password: string, rememberMe?: boolean) {\n        if (this.isLoggedIn) {\n            this.logout();\n        }\n\n        return this.oidcHelperService.loginWithPassword(userName, password)\n            .pipe(map(resp => this.processLoginResponse(resp, rememberMe)));\n    }\n\n    private processLoginResponse(response: LoginResponse, rememberMe?: boolean) {\n        const accessToken = response.access_token;\n\n        if (accessToken == null) {\n            throw new Error('accessToken cannot be null');\n        }\n\n        rememberMe = rememberMe || this.rememberMe;\n\n        const refreshToken = response.refresh_token || this.refreshToken;\n        const expiresIn = response.expires_in;\n        const tokenExpiryDate = new Date();\n        tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\n        const accessTokenExpiry = tokenExpiryDate;\n        const jwtHelper = new JwtHelper();\n        const decodedAccessToken = jwtHelper.decodeToken(accessToken) as AccessToken;\n\n        const permissions: PermissionValues[] = Array.isArray(decodedAccessToken.permission) ? decodedAccessToken.permission : [decodedAccessToken.permission];\n\n        if (!this.isLoggedIn) {\n            this.configurations.import(decodedAccessToken.configuration);\n        }\n\n        const user = new User(\n            decodedAccessToken.sub,\n            decodedAccessToken.name,\n            decodedAccessToken.fullname,\n            decodedAccessToken.email,\n            decodedAccessToken.jobtitle,\n            decodedAccessToken.phone_number,\n            Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role]);\n        user.isEnabled = true;\n\n        this.saveUserDetails(user, permissions, accessToken, refreshToken, accessTokenExpiry, rememberMe);\n\n        this.reevaluateLoginStatus(user);\n\n        return user;\n    }\n\n    private saveUserDetails(user: User, permissions: PermissionValues[], accessToken: string, refreshToken: string, expiresIn: Date, rememberMe: boolean) {\n        if (rememberMe) {\n            this.localStorage.savePermanentData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.savePermanentData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.savePermanentData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.savePermanentData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.savePermanentData(user, DBkeys.CURRENT_USER);\n        } else {\n            this.localStorage.saveSyncedSessionData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.saveSyncedSessionData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.saveSyncedSessionData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.saveSyncedSessionData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.saveSyncedSessionData(user, DBkeys.CURRENT_USER);\n        }\n\n        this.localStorage.savePermanentData(rememberMe, DBkeys.REMEMBER_ME);\n    }\n\n    logout(): void {\n        this.localStorage.deleteData(DBkeys.ACCESS_TOKEN);\n        this.localStorage.deleteData(DBkeys.REFRESH_TOKEN);\n        this.localStorage.deleteData(DBkeys.TOKEN_EXPIRES_IN);\n        this.localStorage.deleteData(DBkeys.USER_PERMISSIONS);\n        this.localStorage.deleteData(DBkeys.CURRENT_USER);\n\n        this.configurations.clearLocalChanges();\n\n        this.reevaluateLoginStatus();\n    }\n\n    private reevaluateLoginStatus(currentUser?: User) {\n        const user = currentUser || this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        const isLoggedIn = user != null;\n\n        if (this.previousIsLoggedInCheck != isLoggedIn) {\n            setTimeout(() => {\n                this._loginStatus.next(isLoggedIn);\n            });\n        }\n\n        this.previousIsLoggedInCheck = isLoggedIn;\n    }\n\n    getLoginStatusEvent(): Observable<boolean> {\n        return this._loginStatus.asObservable();\n    }\n\n    get currentUser(): User {\n\n        const user = this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        this.reevaluateLoginStatus(user);\n\n        return user;\n    }\n\n    get userPermissions(): PermissionValues[] {\n        return this.localStorage.getDataObject<PermissionValues[]>(DBkeys.USER_PERMISSIONS, false) || [];\n    }\n\n    get accessToken(): string {\n        return this.oidcHelperService.accessToken;\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.oidcHelperService.accessTokenExpiryDate;\n    }\n\n    get refreshToken(): string {\n        return this.oidcHelperService.refreshToken;\n    }\n\n    get isSessionExpired(): boolean {\n        return this.oidcHelperService.isSessionExpired;\n    }\n\n    get isLoggedIn(): boolean {\n        return this.currentUser != null;\n    }\n\n    get rememberMe(): boolean {\n        return this.localStorage.getDataObject<boolean>(DBkeys.REMEMBER_ME, false) == true;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, NavigationExtras, CanLoad, Route } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n        const url: string = state.url;\n        return this.checkLogin(url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    canLoad(route: Route): boolean {\n\n        const url = `/${route.path}`;\n        return this.checkLogin(url);\n    }\n\n    checkLogin(url: string): boolean {\n\n        if (this.authService.isLoggedIn) {\n            return true;\n        }\n\n        this.authService.loginRedirectUrl = url;\n        this.router.navigate(['/login']);\n\n        return false;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\n\nimport { OidcHelperService } from './services/oidc-helper.service';\nimport { AuthService } from './services/auth.service';\nimport { JwtHelper } from './services/jwt-helper';\nimport { AuthGuard } from './services/auth-guard.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        OAuthModule,\n    ],\n    exports: [],\n    providers: [\n        OidcHelperService,\n        AuthService,\n        JwtHelper,\n        AuthGuard\n    ]\n})\nexport class NgxOauth2Module { }\n"],"names":[],"mappings":"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"}
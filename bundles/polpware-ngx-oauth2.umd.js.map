{"version":3,"file":"polpware-ngx-oauth2.umd.js","sources":["ng://@polpware/ngx-oauth2/lib/models/user.model.ts","ng://@polpware/ngx-oauth2/lib/models/permission.model.ts","ng://@polpware/ngx-oauth2/lib/services/oidc-helper.service.ts","ng://@polpware/ngx-oauth2/lib/services/jwt-helper.ts","ng://@polpware/ngx-oauth2/lib/services/auth.service.ts","ng://@polpware/ngx-oauth2/lib/services/auth-guard.service.ts","ng://@polpware/ngx-oauth2/lib/services/endpoint-base.service.ts","ng://@polpware/ngx-oauth2/lib/ngx-oauth2.module.ts"],"sourcesContent":["// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class User {\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\n    constructor(id?: string, userName?: string, fullName?: string, email?: string, jobTitle?: string, phoneNumber?: string, roles?: string[]) {\n\n        this.id = id;\n        this.userName = userName;\n        this.fullName = fullName;\n        this.email = email;\n        this.jobTitle = jobTitle;\n        this.phoneNumber = phoneNumber;\n        this.roles = roles;\n    }\n\n\n    get friendlyName(): string {\n        let name = this.fullName || this.userName;\n\n        if (this.jobTitle) {\n            name = this.jobTitle + ' ' + name;\n        }\n\n        return name;\n    }\n\n\n    public id: string;\n    public userName: string;\n    public fullName: string;\n    public email: string;\n    public jobTitle: string;\n    public phoneNumber: string;\n    public isEnabled: boolean;\n    public isLockedOut: boolean;\n    public roles: string[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport type PermissionNames =\n    'View Users' | 'Manage Users' |\n    'View Roles' | 'Manage Roles' | 'Assign Roles';\n\nexport type PermissionValues =\n    'users.view' | 'users.manage' |\n    'roles.view' | 'roles.manage' | 'roles.assign';\n\nexport class Permission {\n\n    public static readonly viewUsersPermission: PermissionValues = 'users.view';\n    public static readonly manageUsersPermission: PermissionValues = 'users.manage';\n\n    public static readonly viewRolesPermission: PermissionValues = 'roles.view';\n    public static readonly manageRolesPermission: PermissionValues = 'roles.manage';\n    public static readonly assignRolesPermission: PermissionValues = 'roles.assign';\n\n\n    constructor(name?: PermissionNames, value?: PermissionValues, groupName?: string, description?: string) {\n        this.name = name;\n        this.value = value;\n        this.groupName = groupName;\n        this.description = description;\n    }\n\n    public name: PermissionNames;\n    public value: PermissionValues;\n    public groupName: string;\n    public description: string;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\nimport {\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider,\n    IConfigurationServiceContract,\n    ConfigurationServiceAbstractProvider,\n    environment,\n    DBkeys\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { LoginResponse } from '../models/login-response.model';\n\n\n@Injectable()\nexport class OidcHelperService {\n\n    private get baseUrl() { return this.configurations.baseUrl; }\n    private clientId = 'quickapp_spa';\n    private scope = 'openid email phone profile offline_access roles quickapp_api';\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private http: HttpClient,\n        private oauthService: OAuthService,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        /*\n        if (environment.requireHttps !== undefined) {\n            this.oauthService.configure({\n                requireHttps: false\n            });\n        } */\n\n    }\n\n\n    loginWithPassword(userName: string, password: string) {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('username', userName)\n            .append('password', password)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'password')\n            .append('scope', this.scope);\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    refreshLogin() {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('refresh_token', this.refreshToken)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'refresh_token');\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    get accessToken(): string {\n        return this.localStorage.getData(DBkeys.ACCESS_TOKEN);\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.localStorage.getDataObject<Date>(DBkeys.TOKEN_EXPIRES_IN, true);\n    }\n\n    get refreshToken(): string {\n        return this.localStorage.getData(DBkeys.REFRESH_TOKEN);\n    }\n\n    get isSessionExpired(): boolean {\n        if (this.accessTokenExpiryDate == null) {\n            return true;\n        }\n\n        return this.accessTokenExpiryDate.valueOf() <= new Date().valueOf();\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\n/**\n * Helper class to decode and find JWT expiration.\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class JwtHelper {\n\n    public urlBase64Decode(str: string): string {\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: { break; }\n            case 2: { output += '=='; break; }\n            case 3: { output += '='; break; }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    }\n\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n    private b64DecodeUnicode(str: any) {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), (c: any) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    public decodeToken(token: string): any {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    public getTokenExpirationDate(token: string): Date {\n        let decoded: any;\n        decoded = this.decodeToken(token);\n\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n\n        const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(decoded.exp);\n\n        return date;\n    }\n\n    public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n\n        if (date == null) {\n            return false;\n        }\n\n        // Token expired?\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider,\n    IConfigurationServiceContract,\n    ConfigurationServiceAbstractProvider,\n    Utilities,\n    DBkeys,\n    ConfigurationServiceConstants\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { OidcHelperService } from './oidc-helper.service';\nimport { JwtHelper } from './jwt-helper';\nimport { AccessToken, LoginResponse } from '../models/login-response.model';\nimport { User } from '../models/user.model';\nimport { PermissionValues } from '../models/permission.model';\n\n@Injectable()\nexport class AuthService {\n    public get loginUrl() { return this.configurations.loginUrl; }\n    public get homeUrl() { return this.configurations.homeUrl; }\n\n    /**\n     * Tracks the the url a user attempts to access but \n     * cannot be authenticated. \n     */\n    public loginRedirectUrl: string;\n\n    public logoutRedirectUrl: string;\n\n    public reLoginDelegate: () => void;\n\n    private _loginStatus = new Subject<boolean>();\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private router: Router,\n        private oidcHelperService: OidcHelperService,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        this.initializeLoginStatus();\n    }\n\n    private initializeLoginStatus() {\n        this.localStorage.getInitEvent().subscribe(() => {\n            this.emitLoginStatus();\n        });\n    }\n\n    gotoPage(page: string, preserveParams = true) {\n\n        const navigationExtras: NavigationExtras = {\n            queryParamsHandling: preserveParams ? 'merge' : '', preserveFragment: preserveParams\n        };\n\n        this.router.navigate([page], navigationExtras);\n    }\n\n    gotoHomePage() {\n        this.router.navigate([this.homeUrl]);\n    }\n\n    redirectLoginUser(ignoreQueryParams?: boolean) {\n\n        const redirect = (this.loginRedirectUrl &&\n            (this.loginRedirectUrl != '/') &&\n            (this.loginRedirectUrl != this.loginUrl)) ? this.loginRedirectUrl : this.homeUrl;\n        this.loginRedirectUrl = null;\n\n        const urlParamsAndFragment = Utilities.splitInTwo(redirect, '#');\n        const urlAndParams = Utilities.splitInTwo(urlParamsAndFragment.firstPart, '?');\n\n        const navigationExtras: NavigationExtras = {\n            fragment: urlParamsAndFragment.secondPart\n        };\n\n        if (!ignoreQueryParams) {\n            Object.assign(navigationExtras, {\n                queryParams: Utilities.getQueryParamsFromString(urlAndParams.secondPart),\n                queryParamsHandling: 'merge'\n            });\n        }\n\n        this.router.navigate([urlAndParams.firstPart], navigationExtras);\n    }\n\n    redirectLogoutUser() {\n        const redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;\n        this.logoutRedirectUrl = null;\n\n        this.router.navigate([redirect]);\n    }\n\n    redirectForLogin(redirectUrl?: string) {\n        if (redirectUrl) {\n            this.loginRedirectUrl = redirectUrl;\n        } else {\n            this.loginRedirectUrl = this.router.url;\n        }\n        this.router.navigate([this.loginUrl]);\n    }\n\n    reLogin() {\n        if (this.reLoginDelegate) {\n            this.reLoginDelegate();\n        } else {\n            this.redirectForLogin();\n        }\n    }\n\n    // Will not change the status that we have \n    refreshLogin() {\n        return this.oidcHelperService.refreshLogin()\n            .pipe(map(resp => this.processLoginResponse(resp, this.rememberMe, true)));\n    }\n\n    loginWithPassword(userName: string, password: string, rememberMe?: boolean) {\n        // Clean what we have before, without emitting any event. \n        this.logout(true);\n\n        return this.oidcHelperService.loginWithPassword(userName, password)\n            .pipe(map(resp => this.processLoginResponse(resp, rememberMe)));\n    }\n\n    // Silent event in case.\n    private processLoginResponse(response: LoginResponse, rememberMe: boolean, silentEvent?: boolean) {\n        const accessToken = response.access_token;\n\n        if (accessToken == null) {\n            throw new Error('accessToken cannot be null');\n        }\n\n        rememberMe = rememberMe || this.rememberMe;\n\n        const refreshToken = response.refresh_token || this.refreshToken;\n        const expiresIn = response.expires_in;\n        const tokenExpiryDate = new Date();\n        tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\n        const accessTokenExpiry = tokenExpiryDate;\n        const jwtHelper = new JwtHelper();\n        const decodedAccessToken = jwtHelper.decodeToken(accessToken) as AccessToken;\n\n        const permissions: PermissionValues[] = Array.isArray(decodedAccessToken.permission) ? decodedAccessToken.permission : [decodedAccessToken.permission];\n\n        if (!this.isLoggedIn) {\n            this.configurations.import(decodedAccessToken.configuration);\n        }\n\n        const user = new User(\n            decodedAccessToken.sub,\n            decodedAccessToken.name,\n            decodedAccessToken.fullname,\n            decodedAccessToken.email,\n            decodedAccessToken.jobtitle,\n            decodedAccessToken.phone_number,\n            Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role]);\n        user.isEnabled = true;\n\n        this.saveUserDetails(user, permissions, accessToken, refreshToken, accessTokenExpiry, rememberMe);\n\n        if (silentEvent !== true) {\n            this.emitLoginStatus(user);\n        }\n\n        return user;\n    }\n\n    private saveUserDetails(user: User, permissions: PermissionValues[], accessToken: string, refreshToken: string, expiresIn: Date, rememberMe: boolean) {\n        if (rememberMe) {\n            this.localStorage.savePermanentData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.savePermanentData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.savePermanentData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.savePermanentData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.savePermanentData(user, DBkeys.CURRENT_USER);\n        } else {\n            this.localStorage.saveSyncedSessionData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.saveSyncedSessionData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.saveSyncedSessionData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.saveSyncedSessionData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.saveSyncedSessionData(user, DBkeys.CURRENT_USER);\n        }\n\n        this.localStorage.savePermanentData(rememberMe, DBkeys.REMEMBER_ME);\n    }\n\n    // Silient event in case.\n    logout(silentEvent?: boolean): void {\n        this.localStorage.deleteData(DBkeys.ACCESS_TOKEN);\n        this.localStorage.deleteData(DBkeys.REFRESH_TOKEN);\n        this.localStorage.deleteData(DBkeys.TOKEN_EXPIRES_IN);\n        this.localStorage.deleteData(DBkeys.USER_PERMISSIONS);\n        this.localStorage.deleteData(DBkeys.CURRENT_USER);\n\n        this.configurations.clearLocalChanges();\n\n        if (silentEvent !== true) {\n            this.emitLoginStatus();\n        }\n    }\n\n    private emitLoginStatus(currentUser?: User) {\n        const user = currentUser || this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        const isLoggedIn = user != null;\n        this._loginStatus.next(isLoggedIn);\n    }\n\n    getLoginStatusEvent(): Observable<boolean> {\n        return this._loginStatus.asObservable();\n    }\n\n    get currentUser(): User {\n        const user = this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        return user;\n    }\n\n    get userPermissions(): PermissionValues[] {\n        return this.localStorage.getDataObject<PermissionValues[]>(DBkeys.USER_PERMISSIONS, false) || [];\n    }\n\n    get accessToken(): string {\n        return this.oidcHelperService.accessToken;\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.oidcHelperService.accessTokenExpiryDate;\n    }\n\n    get refreshToken(): string {\n        return this.oidcHelperService.refreshToken;\n    }\n\n    get isSessionExpired(): boolean {\n        return this.oidcHelperService.isSessionExpired;\n    }\n\n    get isLoggedIn(): boolean {\n        return this.currentUser != null;\n    }\n\n    get rememberMe(): boolean {\n        return this.localStorage.getDataObject<boolean>(DBkeys.REMEMBER_ME, false) == true;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, NavigationExtras, CanLoad, Route } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n        const url: string = state.url;\n        return this.checkLogin(url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    canLoad(route: Route): boolean {\n\n        const url = `/${route.path}`;\n        return this.checkLogin(url);\n    }\n\n    checkLogin(url: string): boolean {\n\n        if (this.authService.isLoggedIn) {\n            return true;\n        }\n\n        this.authService.loginRedirectUrl = url;\n        this.router.navigate(['/login']);\n\n        return false;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { mergeMap, switchMap, catchError } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\nexport class EndpointBase {\n\n    private taskPauser: Subject<any>;\n    private isRefreshingLogin: boolean;\n\n    constructor(\n        protected http: HttpClient,\n        private authService: AuthService) {\n\n    }\n\n    protected get requestHeaders(): { headers: HttpHeaders | { [header: string]: string | string[]; } } {\n        const headers = new HttpHeaders({\n            Authorization: 'Bearer ' + this.authService.accessToken,\n            'Content-Type': 'application/json',\n            Accept: 'application/json, text/plain, */*'\n        });\n\n        return { headers };\n    }\n\n    public refreshLogin() {\n        return this.authService.refreshLogin().pipe(\n            catchError(error => {\n                return this.handleError(error, () => this.refreshLogin());\n            }));\n    }\n\n    protected handleError(error, continuation: () => Observable<any>) {\n        if (error.status == 401) {\n            if (this.isRefreshingLogin) {\n                return this.pauseTask(continuation);\n            }\n\n            this.isRefreshingLogin = true;\n\n            return from(this.authService.refreshLogin()).pipe(\n                mergeMap(() => {\n                    this.isRefreshingLogin = false;\n                    this.resumeTasks(true);\n\n                    return continuation();\n                }),\n                catchError(refreshLoginError => {\n                    this.isRefreshingLogin = false;\n                    this.resumeTasks(false);\n                    this.authService.reLogin();\n\n                    if (refreshLoginError.status == 401 || (refreshLoginError.error && refreshLoginError.error.error == 'invalid_grant')) {\n                        return throwError('session expired');\n                    } else {\n                        return throwError(`unknown refresh error (${refreshLoginError || 'server error'})`);\n                    }\n                }));\n        }\n\n        if (error.error && error.error.error == 'invalid_grant') {\n            this.authService.reLogin();\n\n            return throwError((error.error && error.error.error_description) ? `session expired (${error.error.error_description})` : 'session expired');\n        } else {\n            return throwError(error);\n        }\n    }\n\n\n\n    private pauseTask(continuation: () => Observable<any>) {\n        if (!this.taskPauser) {\n            this.taskPauser = new Subject();\n        }\n\n        return this.taskPauser.pipe(switchMap(continueOp => {\n            return continueOp ? continuation() : throwError('session expired');\n        }));\n    }\n\n\n    private resumeTasks(continueOp: boolean) {\n        setTimeout(() => {\n            if (this.taskPauser) {\n                this.taskPauser.next(continueOp);\n                this.taskPauser.complete();\n                this.taskPauser = null;\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\n\nimport { OidcHelperService } from './services/oidc-helper.service';\nimport { AuthService } from './services/auth.service';\nimport { JwtHelper } from './services/jwt-helper';\nimport { AuthGuard } from './services/auth-guard.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        OAuthModule,\n    ],\n    exports: [],\n    providers: [\n        OidcHelperService,\n        AuthService,\n        JwtHelper,\n        AuthGuard\n    ]\n})\nexport class NgxOauth2Module { }\n"],"names":["HttpHeaders","HttpParams","from","mergeMap","DBkeys","Injectable","Subject","Utilities","map","catchError","throwError","switchMap","OAuthModule","NgModule"],"mappings":"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"}
{"version":3,"file":"polpware-ngx-oauth2.js","sources":["ng://@polpware/ngx-oauth2/lib/models/user.model.ts","ng://@polpware/ngx-oauth2/lib/models/permission.model.ts","ng://@polpware/ngx-oauth2/lib/services/oidc-helper.service.ts","ng://@polpware/ngx-oauth2/lib/services/jwt-helper.ts","ng://@polpware/ngx-oauth2/lib/services/auth.service.ts","ng://@polpware/ngx-oauth2/lib/services/auth-guard.service.ts","ng://@polpware/ngx-oauth2/lib/services/endpoint-base.service.ts","ng://@polpware/ngx-oauth2/lib/services/non-auth.guard.ts","ng://@polpware/ngx-oauth2/lib/ngx-oauth2.module.ts","ng://@polpware/ngx-oauth2/public-api.ts","ng://@polpware/ngx-oauth2/polpware-ngx-oauth2.ts"],"sourcesContent":["export class User {\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\n    constructor(id?: string,\n        userName?: string,\n        fullName?: string,\n        email?: string,\n        jobTitle?: string,\n        phoneNumber?: string,\n        roles?: string[]) {\n\n        this.id = id;\n        this.userName = userName;\n        this.fullName = fullName;\n        this.email = email;\n        this.jobTitle = jobTitle;\n        this.phoneNumber = phoneNumber;\n        this.roles = roles;\n    }\n\n\n    get friendlyName(): string {\n        let name = this.fullName || this.userName;\n\n        if (this.jobTitle) {\n            name = this.jobTitle + ' ' + name;\n        }\n\n        return name;\n    }\n\n\n    public id: string;\n    public userName: string;\n    public fullName: string;\n    public email: string;\n    public jobTitle: string;\n    public phoneNumber: string;\n    public isEnabled: boolean;\n    public isLockedOut: boolean;\n    public roles: string[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport type PermissionNames =\n    'View Users' | 'Manage Users' |\n    'View Roles' | 'Manage Roles' | 'Assign Roles';\n\nexport type PermissionValues =\n    'users.view' | 'users.manage' |\n    'roles.view' | 'roles.manage' | 'roles.assign';\n\nexport class Permission {\n\n    public static readonly viewUsersPermission: PermissionValues = 'users.view';\n    public static readonly manageUsersPermission: PermissionValues = 'users.manage';\n\n    public static readonly viewRolesPermission: PermissionValues = 'roles.view';\n    public static readonly manageRolesPermission: PermissionValues = 'roles.manage';\n    public static readonly assignRolesPermission: PermissionValues = 'roles.assign';\n\n\n    constructor(name?: PermissionNames, value?: PermissionValues, groupName?: string, description?: string) {\n        this.name = name;\n        this.value = value;\n        this.groupName = groupName;\n        this.description = description;\n    }\n\n    public name: PermissionNames;\n    public value: PermissionValues;\n    public groupName: string;\n    public description: string;\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n    ConfigurationServiceAbstractProvider,\n    DBkeys, IConfigurationServiceContract,\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { from } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { LoginResponse } from '../models/login-response.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OidcHelperService {\n\n    private get baseUrl() { return this.configurations.baseUrl; }\n    private clientId = 'quickapp_spa';\n    private scope = 'openid email phone profile offline_access roles quickapp_api';\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private http: HttpClient,\n        private oauthService: OAuthService,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        /*\n        if (environment.requireHttps !== undefined) {\n            this.oauthService.configure({\n                requireHttps: false\n            });\n        } */\n\n    }\n\n    loginWithPassword(userName: string, password: string) {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('username', userName)\n            .append('password', password)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'password')\n            .append('scope', this.scope);\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    refreshLogin() {\n        const header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const params = new HttpParams()\n            .append('refresh_token', this.refreshToken)\n            .append('client_id', this.clientId)\n            .append('grant_type', 'refresh_token');\n\n        this.oauthService.issuer = this.baseUrl;\n\n        return from(this.oauthService.loadDiscoveryDocument())\n            .pipe(mergeMap(() => {\n                return this.http.post<LoginResponse>(this.oauthService.tokenEndpoint, params, { headers: header });\n            }));\n    }\n\n    get accessToken(): string {\n        return this.localStorage.getData(DBkeys.ACCESS_TOKEN);\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.localStorage.getDataObject<Date>(DBkeys.TOKEN_EXPIRES_IN, true);\n    }\n\n    get refreshToken(): string {\n        return this.localStorage.getData(DBkeys.REFRESH_TOKEN);\n    }\n\n    get isSessionExpired(): boolean {\n        if (this.accessTokenExpiryDate == null) {\n            return true;\n        }\n\n        return this.accessTokenExpiryDate.valueOf() <= new Date().valueOf();\n    }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Helper class to decode and find JWT expiration.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelper {\n\n    public urlBase64Decode(str: string): string {\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: { break; }\n            case 2: { output += '=='; break; }\n            case 3: { output += '='; break; }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    }\n\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n    private b64DecodeUnicode(str: any) {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), (c: any) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    public decodeToken(token: string): any {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    public getTokenExpirationDate(token: string): Date {\n        let decoded: any;\n        decoded = this.decodeToken(token);\n\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n\n        const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(decoded.exp);\n\n        return date;\n    }\n\n    public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n\n        if (date == null) {\n            return false;\n        }\n\n        // Token expired?\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport {\n    ConfigurationServiceAbstractProvider,\n    DBkeys,\n    IConfigurationServiceContract,\n    ILocalStoreManagerContract,\n    LocalStoreManagerServiceAbstractProvider,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\nimport { NgxLoggerImpl } from '@polpware/ngx-logger';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccessToken, LoginResponse } from '../models/login-response.model';\nimport { PermissionValues } from '../models/permission.model';\nimport { User } from '../models/user.model';\nimport { JwtHelper } from './jwt-helper';\nimport { OidcHelperService } from './oidc-helper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public get loginUrl() { return this.configurations.loginUrl; }\n    public get homeUrl() { return this.configurations.homeUrl; }\n\n    /**\n     * Tracks the the url a user attempts to access but \n     * cannot be authenticated. \n     */\n    public loginRedirectUrl: string;\n\n    public logoutRedirectUrl: string;\n\n    public reLoginDelegate: () => void;\n\n    private _loginStatus = new Subject<boolean>();\n\n    private localStorage: ILocalStoreManagerContract;\n    private configurations: IConfigurationServiceContract;\n\n    constructor(\n        private router: Router,\n        private oidcHelperService: OidcHelperService,\n        private readonly _logger: NgxLoggerImpl,\n        configurationServiceProvider: ConfigurationServiceAbstractProvider,\n        localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.configurations = configurationServiceProvider.get();\n\n        this.initializeLoginStatus();\n    }\n\n    private initializeLoginStatus() {\n        this.localStorage.getInitEvent().subscribe(() => {\n            this.emitLoginStatus();\n        });\n    }\n\n    gotoPage(page: string, preserveParams = true) {\n\n        const navigationExtras: NavigationExtras = {\n            queryParamsHandling: preserveParams ? 'merge' : '', preserveFragment: preserveParams\n        };\n\n        this.router.navigate([page], navigationExtras);\n    }\n\n    gotoHomePage() {\n        this.router.navigate([this.homeUrl]);\n    }\n\n    redirectLoginUser(ignoreQueryParams?: boolean) {\n\n        this._logger.debug(`login redirect url is: ${this.loginRedirectUrl}`);\n        this._logger.debug(`home url is: ${this.homeUrl}`);\n\n        const redirect = (this.loginRedirectUrl &&\n            (this.loginRedirectUrl != '/') &&\n            (this.loginRedirectUrl != this.loginUrl)) ? this.loginRedirectUrl : this.homeUrl;\n        this.loginRedirectUrl = null;\n\n        this._logger.debug(`final redirect url is: ${redirect}`);\n\n        const urlParamsAndFragment = Utilities.splitInTwo(redirect, '#');\n        const urlAndParams = Utilities.splitInTwo(urlParamsAndFragment.firstPart, '?');\n\n        const navigationExtras: NavigationExtras = {\n            fragment: urlParamsAndFragment.secondPart\n        };\n\n        if (!ignoreQueryParams) {\n            Object.assign(navigationExtras, {\n                queryParams: Utilities.getQueryParamsFromString(urlAndParams.secondPart),\n                queryParamsHandling: 'merge'\n            });\n        }\n\n        this._logger.debug(`Redirection url is: ${urlAndParams.firstPart}`);\n        this._logger.debug('Extra parameters: ');\n        this._logger.debug(navigationExtras);\n\n        this.router.navigate([urlAndParams.firstPart], navigationExtras);\n    }\n\n    redirectLogoutUser() {\n        const redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;\n        this.logoutRedirectUrl = null;\n\n        this.router.navigate([redirect]);\n    }\n\n    redirectForLogin(redirectUrl?: string) {\n        if (redirectUrl) {\n            this.loginRedirectUrl = redirectUrl;\n        } else {\n            this.loginRedirectUrl = this.router.url;\n        }\n        this.router.navigate([this.loginUrl]);\n    }\n\n    // todo: Is this useful????\n    /**\n     * Prepare the login URL,\n     * including setting up the right redirect url.\n     * @param redirectUrl Redirect url.\n     */\n    prepareLoginUrl(redirectUrl?: string) {\n        if (redirectUrl) {\n            this.loginRedirectUrl = redirectUrl;\n        } else {\n            this.loginRedirectUrl = this.router.url;\n        }\n\n        return this.router.parseUrl(this.loginUrl);\n    }\n\n    reLogin() {\n\n        if (this.reLoginDelegate) {\n            this.reLoginDelegate();\n        } else {\n            this.redirectForLogin();\n        }\n    }\n\n    // Will not change the status that we have \n    refreshLogin() {\n        return this.oidcHelperService.refreshLogin()\n            .pipe(map(resp => this.processLoginResponse(resp, this.rememberMe, true)));\n    }\n\n    loginWithPassword(userName: string, password: string, rememberMe?: boolean) {\n        // Clean what we have before, without emitting any event. \n        this.logout(true);\n\n        return this.oidcHelperService.loginWithPassword(userName, password)\n            .pipe(map(resp => this.processLoginResponse(resp, rememberMe)));\n    }\n\n\n    loginWithToken(accessToken: string, refreshToken?: string, expiresIn?: number) {\n        refreshToken = refreshToken || '';\n        expiresIn = 24 * 60 * 60 * 1000;\n        const tokenExpiryDate = new Date();\n        tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\n        const accessTokenExpiry = tokenExpiryDate;\n        const jwtHelper = new JwtHelper();\n        const decodedAccessToken = jwtHelper.decodeToken(accessToken) as AccessToken;\n\n        const permissions: PermissionValues[] = Array.isArray(decodedAccessToken.permission) ? decodedAccessToken.permission : [decodedAccessToken.permission];\n\n        if (!this.isLoggedIn) {\n            this.configurations.import(decodedAccessToken.configuration);\n        }\n\n        const user = new User(\n            decodedAccessToken.sub,\n            decodedAccessToken.name,\n            decodedAccessToken.fullname,\n            decodedAccessToken.email,\n            decodedAccessToken.jobtitle,\n            decodedAccessToken.phone_number,\n            Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role]);\n        user.isEnabled = true;\n\n        this.saveUserDetails(user, permissions, accessToken, refreshToken, accessTokenExpiry, false);\n        // todo: Do we need to emit events?\n\n        return user;\n    }\n\n    // Silent event in case.\n    private processLoginResponse(response: LoginResponse, rememberMe: boolean, silentEvent?: boolean) {\n        const accessToken = response.access_token;\n\n        if (accessToken == null) {\n            throw new Error('accessToken cannot be null');\n        }\n\n        rememberMe = rememberMe || this.rememberMe;\n\n        const refreshToken = response.refresh_token || this.refreshToken;\n        const expiresIn = response.expires_in;\n        const tokenExpiryDate = new Date();\n        tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\n        const accessTokenExpiry = tokenExpiryDate;\n        const jwtHelper = new JwtHelper();\n        const decodedAccessToken = jwtHelper.decodeToken(accessToken) as AccessToken;\n\n        const permissions: PermissionValues[] = Array.isArray(decodedAccessToken.permission) ? decodedAccessToken.permission : [decodedAccessToken.permission];\n\n        if (!this.isLoggedIn) {\n            this.configurations.import(decodedAccessToken.configuration);\n        }\n\n        const user = new User(\n            decodedAccessToken.sub,\n            decodedAccessToken.name,\n            decodedAccessToken.fullname,\n            decodedAccessToken.email,\n            decodedAccessToken.jobtitle,\n            decodedAccessToken.phone_number,\n            Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role]);\n        user.isEnabled = true;\n\n        this.saveUserDetails(user, permissions, accessToken, refreshToken, accessTokenExpiry, rememberMe);\n\n        if (silentEvent !== true) {\n            this.emitLoginStatus(user);\n        }\n\n        return user;\n    }\n\n    private saveUserDetails(user: User, permissions: PermissionValues[], accessToken: string, refreshToken: string, expiresIn: Date, rememberMe: boolean) {\n        if (rememberMe) {\n            this.localStorage.savePermanentData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.savePermanentData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.savePermanentData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.savePermanentData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.savePermanentData(user, DBkeys.CURRENT_USER);\n        } else {\n            this.localStorage.saveSyncedSessionData(accessToken, DBkeys.ACCESS_TOKEN);\n            this.localStorage.saveSyncedSessionData(refreshToken, DBkeys.REFRESH_TOKEN);\n            this.localStorage.saveSyncedSessionData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\n            this.localStorage.saveSyncedSessionData(permissions, DBkeys.USER_PERMISSIONS);\n            this.localStorage.saveSyncedSessionData(user, DBkeys.CURRENT_USER);\n        }\n\n        this.localStorage.savePermanentData(rememberMe, DBkeys.REMEMBER_ME);\n    }\n\n    // Silient event in case.\n    logout(silentEvent?: boolean): void {\n        this.localStorage.deleteData(DBkeys.ACCESS_TOKEN);\n        this.localStorage.deleteData(DBkeys.REFRESH_TOKEN);\n        this.localStorage.deleteData(DBkeys.TOKEN_EXPIRES_IN);\n        this.localStorage.deleteData(DBkeys.USER_PERMISSIONS);\n        this.localStorage.deleteData(DBkeys.CURRENT_USER);\n\n        this.configurations.clearLocalChanges();\n\n        if (silentEvent !== true) {\n            this.emitLoginStatus();\n        }\n    }\n\n    private emitLoginStatus(currentUser?: User) {\n        const user = currentUser || this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        const isLoggedIn = user != null;\n        this._loginStatus.next(isLoggedIn);\n    }\n\n    getLoginStatusEvent(): Observable<boolean> {\n        return this._loginStatus.asObservable();\n    }\n\n    get currentUser(): User {\n        const user = this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER, false);\n        return user;\n    }\n\n    get userPermissions(): PermissionValues[] {\n        return this.localStorage.getDataObject<PermissionValues[]>(DBkeys.USER_PERMISSIONS, false) || [];\n    }\n\n    get accessToken(): string {\n        return this.oidcHelperService.accessToken;\n    }\n\n    get accessTokenExpiryDate(): Date {\n        return this.oidcHelperService.accessTokenExpiryDate;\n    }\n\n    get refreshToken(): string {\n        return this.oidcHelperService.refreshToken;\n    }\n\n    get isSessionExpired(): boolean {\n        return this.oidcHelperService.isSessionExpired;\n    }\n\n    get isLoggedIn(): boolean {\n        return this.currentUser != null;\n    }\n\n    get rememberMe(): boolean {\n        return this.localStorage.getDataObject<boolean>(DBkeys.REMEMBER_ME, false) == true;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Route, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n\n    constructor(private readonly _authService: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n        const url: string = state.url;\n        return this.checkLogin(url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    canLoad(route: Route): boolean {\n\n        const url = `/${route.path}`;\n        return this.checkLogin(url);\n    }\n\n    checkLogin(url: string): boolean {\n\n        if (this._authService.isLoggedIn) {\n            return true;\n        }\n\n        this._authService.redirectForLogin();\n        return false;\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { from, Observable, Subject, throwError } from 'rxjs';\nimport { catchError, mergeMap, switchMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\nexport class EndpointBase {\n\n    private taskPauser: Subject<any>;\n    private isRefreshingLogin: boolean;\n\n    constructor(\n        protected http: HttpClient,\n        private authService: AuthService) {\n    }\n\n    public refreshLogin() {\n        return this.authService.refreshLogin().pipe(\n            catchError(error => {\n                return this.handleError(error, () => this.refreshLogin());\n            }));\n    }\n\n    protected get requestHeaders(): { headers: HttpHeaders | { [header: string]: string | string[]; } } {\n        const headers = new HttpHeaders({\n            Authorization: 'Bearer ' + this.authService.accessToken,\n            'Content-Type': 'application/json',\n            Accept: 'application/json, text/plain, */*'\n        });\n\n        return { headers };\n    }\n\n    protected handleError(error, continuation: () => Observable<any>) {\n        // If the error is about authentication. \n        if (error.status == 401) {\n            // Pause if the refreshing is in progress. \n            if (this.isRefreshingLogin) {\n                return this.pauseTask(continuation);\n            }\n\n            // Try to refresh to see if we can rescue \n            this.isRefreshingLogin = true;\n            return from(this.authService.refreshLogin())\n                .pipe(mergeMap(() => {\n                    this.isRefreshingLogin = false;\n                    // Run the resumed tasks \n                    this.resumeTasks(true);\n                    // Continue to run the paused \n                    return continuation();\n                }), catchError(refreshLoginError => {\n                    this.isRefreshingLogin = false;\n                    this.resumeTasks(false);\n                    // Logout and notify others of the changes \n                    this.authService.logout();\n\n                    if (refreshLoginError.status == 401 ||\n                        (refreshLoginError.error && refreshLoginError.error.error == 'invalid_grant')) {\n                        return throwError('session expired');\n                    } else {\n                        return throwError(`unknown refresh error (${refreshLoginError || 'server error'})`);\n                    }\n                }));\n        }\n\n        if (error.error && error.error.error == 'invalid_grant') {\n            // Logout \n            this.authService.logout();\n\n            return throwError((error.error && error.error.error_description) ?\n                `session expired (${error.error.error_description})` : 'session expired');\n        } else {\n            return throwError(error);\n        }\n    }\n\n    private pauseTask(continuation: () => Observable<any>) {\n        if (!this.taskPauser) {\n            this.taskPauser = new Subject();\n        }\n\n        return this.taskPauser.pipe(switchMap(continueOp => {\n            return continueOp ? continuation() : throwError('session expired');\n        }));\n    }\n\n    private resumeTasks(continueOp: boolean) {\n        setTimeout(() => {\n            if (this.taskPauser) {\n                this.taskPauser.next(continueOp);\n                this.taskPauser.complete();\n                this.taskPauser = null;\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NonAuthGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private readonly _authService: AuthService) { }\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        return this.checkNonLogin();\r\n    }\r\n\r\n    canActivateChild(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        return this.checkNonLogin();\r\n\r\n    }\r\n\r\n    checkNonLogin(): boolean {\r\n        if (this._authService.isLoggedIn) {\r\n            this._authService.redirectLoginUser();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        OAuthModule,\n    ],\n    exports: [],\n    providers: [\n    ]\n})\nexport class NgxOauth2Module { }\n","/*\n * Public API Surface of ngx-oauth2\n */\n\nexport * from './lib/models/user.model';\nexport * from './lib/models/login-response.model';\nexport * from './lib/models/permission.model';\n\nexport * from './lib/services/oidc-helper.service';\nexport * from './lib/services/auth.service';\nexport * from './lib/services/jwt-helper';\nexport * from './lib/services/auth-guard.service';\nexport * from './lib/services/endpoint-base.service';\nexport * from './lib/services/non-auth.guard';\n\nexport * from './lib/ngx-oauth2.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}